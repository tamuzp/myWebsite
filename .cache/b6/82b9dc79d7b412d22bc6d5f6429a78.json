{"id":"../node_modules/wait-for-expect/lib/helpers.js","dependencies":[{"name":"C:\\Users\\tamuz\\source\\repos\\my-website\\package.json","includedInParent":true,"mtime":1594307235984},{"name":"C:\\Users\\tamuz\\source\\repos\\my-website\\node_modules\\wait-for-expect\\package.json","includedInParent":true,"mtime":1593599707825}],"generated":{"js":"var global = arguments[3];\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSetTimeoutFn = getSetTimeoutFn;\n\n/* eslint-disable import/prefer-default-export */\n\n/* eslint-env jest */\n// Used to avoid using Jest's fake timers and Date.now mocks\n// See https://github.com/TheBrainFamily/wait-for-expect/issues/4 and\n// https://github.com/TheBrainFamily/wait-for-expect/issues/12 for more info\nvar globalObj = typeof window === \"undefined\" ? global : window; // Currently this fn only supports jest timers, but it could support other test runners in the future.\n\nfunction runWithRealTimers(callback) {\n  var usingJestFakeTimers = // eslint-disable-next-line no-underscore-dangle\n  globalObj.setTimeout._isMockFunction && typeof jest !== \"undefined\";\n\n  if (usingJestFakeTimers) {\n    jest.useRealTimers();\n  }\n\n  var callbackReturnValue = callback();\n\n  if (usingJestFakeTimers) {\n    jest.useFakeTimers();\n  }\n\n  return callbackReturnValue;\n}\n\nfunction getSetTimeoutFn() {\n  return runWithRealTimers(function () {\n    return globalObj.setTimeout;\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/wait-for-expect/lib/helpers.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}}],"sources":{"../node_modules/wait-for-expect/lib/helpers.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSetTimeoutFn = getSetTimeoutFn;\n\n/* eslint-disable import/prefer-default-export */\n\n/* eslint-env jest */\n// Used to avoid using Jest's fake timers and Date.now mocks\n// See https://github.com/TheBrainFamily/wait-for-expect/issues/4 and\n// https://github.com/TheBrainFamily/wait-for-expect/issues/12 for more info\nvar globalObj = typeof window === \"undefined\" ? global : window; // Currently this fn only supports jest timers, but it could support other test runners in the future.\n\nfunction runWithRealTimers(callback) {\n  var usingJestFakeTimers = // eslint-disable-next-line no-underscore-dangle\n  globalObj.setTimeout._isMockFunction && typeof jest !== \"undefined\";\n\n  if (usingJestFakeTimers) {\n    jest.useRealTimers();\n  }\n\n  var callbackReturnValue = callback();\n\n  if (usingJestFakeTimers) {\n    jest.useFakeTimers();\n  }\n\n  return callbackReturnValue;\n}\n\nfunction getSetTimeoutFn() {\n  return runWithRealTimers(function () {\n    return globalObj.setTimeout;\n  });\n}"},"lineCount":38}},"error":null,"hash":"1f727f8930f4fb3057401e09e3cdc6f0","cacheData":{"env":{}}}